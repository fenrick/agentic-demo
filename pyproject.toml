[project]
name = "agentic-demo"
version = "0.1.0"
description = "Pydantic AI Lecture Builder"
authors = [
    {name = "Jolyon Suthers",email = "201621+fenrick@users.noreply.github.com"}
]
readme = "README.md"
requires-python = ">= 3.11,<4"
dependencies = [
    "aiosqlite",
    "alembic",
    "faiss-cpu",
    "fastapi",
    "httpx",
    "jsonschema",
    "logfire",
    "loguru",
    "markdown",
    "opentelemetry-instrumentation-fastapi",
    "opentelemetry-instrumentation-requests",
    "opentelemetry-instrumentation",
    "opentelemetry-sdk",
    "opentelemetry-exporter-prometheus",
    "pyarrow",
    "pydantic-settings",
    "pydantic",
    "pydantic-ai",
    "python-docx",
    "python-dotenv",
    "sqlalchemy",
    "sse-starlette",
    "uvicorn[standard]",
    "weasyprint",
    "pyjwt",
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
package-mode = false

[tool.poetry.scripts]
generate-lecture = "cli.generate_lecture:main"

[tool.isort]
profile = "black"

[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
isort = "^6.0.1"
flake8 = "^7.3.0"
pre-commit = "^4.2.0"
ruff = ">=0.4"
mypy = ">=1.8"
bandit = ">=1.7"
pip-audit = ">=2.7"
flake8-bugbear = "^24.12.12"

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
    "httpx",
    "aiosqlite",
]

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.mypy]
python_version = "3.11"
ignore_missing_imports = true
